name: "MPC Builds"

on:
  push:
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "pull_request.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!.github/workflows/sphinx_strict.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/gitrelease.pl'
      - '!tools/scripts/lint.pl'
      - '!**.md'
      - '!**.rst'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  pull_request:
    paths:
      - '**'
      # Don't run this workflow if the only files that changed are the
      # following. Make sure this is the same as the "push.paths" list.
      - '!AUTHORS'
      - '!PROBLEM-REPORT-FORM'
      - '!LICENSE'
      - '!Dockerfile**'
      - '!.dockerignore'
      - '!.mailmap'
      - '!.github/workflows/lint.yml'
      - '!.github/workflows/sphinx_strict.yml'
      - '!etc/**'
      - '!docs/**'
      - '!hooks/**'
      - '!tools/scripts/gitrelease.pl'
      - '!tools/scripts/lint.pl'
      - '!**.md'
      - '!**.rst'
      - '!**/.gitignore'
      - '!**/.lint_config'
      - '!**/README*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TRIGGERING_COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}
  VCPKG_INSTALLED_DIR: ${{ github.workspace }}\vcpkg\installed
  CTEST_OUTPUT_ON_FAILURE: ON
  VCPKG_GIT_COMMIT: 898b728edc5e0d12b50015f9cd18247c4257a3eb

jobs:

  ACE_TAO_u20_i0_xer0:

    runs-on: ubuntu-20.04

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v4
      with:
        path: OpenDDS
        submodules: true
    - name: Parse acetao.ini
      id: acetaoversion
      uses: OpenDDS/acetao-ini-parser@v0.4.0
      with:
        section: 'ace6tao2'
    - name: checkout ACE_TAO
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ${{ steps.acetaoversion.outputs.tag }}
        path: OpenDDS/ACE_TAO
    - name: get ACE_TAO commit
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        export ACE_COMMIT=$(git rev-parse HEAD)
        echo "ACE_COMMIT=$ACE_COMMIT" >> $GITHUB_ENV
    - name: get compiler version
      shell: bash
      run: |
        export COMPILER_VERSION=$(c++ --version 2>&1 | head -n 1)
        echo "COMPILER_VERSION=$COMPILER_VERSION" >> $GITHUB_ENV
    - name: get jdk version
      shell: bash
      run: |
        export JDK_VERSION=$(java -version 2>&1 | grep -i version)
        echo "JDK_VERSION=$JDK_VERSION" >> $GITHUB_ENV
    - name: Cache Artifact
      id: cache-artifact
      uses: actions/cache@v4
      with:
        path: ${{ github.job }}.tar.xz
        key: c01_${{ github.job }}_ace6tao2_${{ env.ACE_COMMIT }}_${{ env.COMPILER_VERSION }}_${{ env.JDK_VERSION }}
    - name: checkout MPC
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: configure OpenDDS
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: |
        cd OpenDDS
        ./configure --no-inline --tests --ace=$GITHUB_WORKSPACE/OpenDDS/ACE_TAO/ACE --mpc=$GITHUB_WORKSPACE/MPC --compile-warnings=WARNING
    - name: build ACE and TAO
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: |
        cd OpenDDS
        . setenv.sh
        cd ACE_TAO/ACE
        make -j4
        cd ../TAO
        make -j4
    - name: create ACE_TAO tar.xz artifact
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd OpenDDS/ACE_TAO
        perl -ni.bak -e "print unless /opendds/" ACE/bin/MakeProjectCreator/config/default.features # remove opendds features from here, let individual build configure scripts handle those
        find . -iname "*\.o" | xargs rm
        tar cvf ../../${{ github.job }}.tar ACE/ace/config.h
        git clean -xdfn | cut -d ' ' -f 3- | xargs tar uvf ../../${{ github.job }}.tar
        xz -3 ../../${{ github.job }}.tar
    - name: upload ACE_TAO artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz

  build_u20_i0_xer0_js0_j17:

    runs-on: ubuntu-20.04

    needs: ACE_TAO_u20_i0_xer0

    steps:
    - name: checkout OpenDDS
      uses: actions/checkout@v4
      with:
        path: OpenDDS
        submodules: true
    - name: Parse acetao.ini
      id: acetaoversion
      uses: OpenDDS/acetao-ini-parser@v0.4.0
      with:
        section: 'ace6tao2'
    - name: checkout MPC
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/MPC
        path: MPC
    - name: checkout ACE_TAO
      uses: actions/checkout@v4
      with:
        repository: DOCGroup/ACE_TAO
        ref: ${{ steps.acetaoversion.outputs.tag }}
        path: ACE_TAO
    - name: download ACE_TAO artifact
      uses: actions/download-artifact@v4
      with:
        name: ACE_TAO_u20_i0_xer0_artifact
        path: ACE_TAO
    - name: extract ACE_TAO artifact
      shell: bash
      run: |
        cd ACE_TAO
        tar xvfJ ACE_TAO_u20_i0_xer0.tar.xz
    - name: configure OpenDDS
      run: |
        cd OpenDDS
        ./configure --no-inline --tests --java=$JAVA_HOME_17_X64 --no-rapidjson --ace=$GITHUB_WORKSPACE/ACE_TAO/ACE --mpc=$GITHUB_WORKSPACE/MPC --compile-warnings=WARNING
    - name: check build configuration
      shell: bash
      run: |
        cd OpenDDS
        . setenv.sh
        tools/scripts/show_build_config.pl
    - uses: ammaraskar/gcc-problem-matcher@0.3.0
    - name: build OpenDDS
      shell: bash
      run: |
        cd OpenDDS
        . setenv.sh
        make -j4
    - name: Build CMake Tests
      run: |
        source OpenDDS/setenv.sh
        mkdir OpenDDS/tests/cmake/build
        cd OpenDDS/tests/cmake/build
        cmake ..
        cmake --build . -- -j4
    - name: gitclean
      shell: bash
      run: |
        touch output.txt
        cd OpenDDS
        git clean -nd -e ext | tee ../output.txt
        if [ -s ../output.txt ]; then exit 1; fi
    - name: create OpenDDS tar.xz artifact
      shell: bash
      run: |
        cd OpenDDS
        rm -rf ACE_TAO
        find . -iname "*\.o" | xargs rm
        tar cvf ../${{ github.job }}.tar setenv.sh
        git clean -xdfn | cut -d ' ' -f 3- | xargs tar uvf ../${{ github.job }}.tar
        xz -3 ../${{ github.job }}.tar
    - name: upload OpenDDS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }}_artifact
        path: ${{ github.job }}.tar.xz
